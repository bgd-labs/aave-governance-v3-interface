/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IPayloadsControllerDataHelper,
  IPayloadsControllerDataHelperInterface,
} from "./IPayloadsControllerDataHelper";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IPayloadsController",
        name: "payloadsController",
        type: "address",
      },
      {
        internalType: "enum PayloadsControllerUtils.AccessControl[]",
        name: "accessLevels",
        type: "uint8[]",
      },
    ],
    name: "getExecutorConfigs",
    outputs: [
      {
        components: [
          {
            internalType: "enum PayloadsControllerUtils.AccessControl",
            name: "accessLevel",
            type: "uint8",
          },
          {
            components: [
              {
                internalType: "address",
                name: "executor",
                type: "address",
              },
              {
                internalType: "uint40",
                name: "delay",
                type: "uint40",
              },
            ],
            internalType: "struct IPayloadsControllerCore.ExecutorConfig",
            name: "config",
            type: "tuple",
          },
        ],
        internalType: "struct IPayloadsControllerDataHelper.ExecutorConfig[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IPayloadsController",
        name: "payloadsController",
        type: "address",
      },
      {
        internalType: "uint40[]",
        name: "payloadsIds",
        type: "uint40[]",
      },
    ],
    name: "getPayloadsData",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address",
                name: "creator",
                type: "address",
              },
              {
                internalType: "enum PayloadsControllerUtils.AccessControl",
                name: "maximumAccessLevelRequired",
                type: "uint8",
              },
              {
                internalType: "enum IPayloadsControllerCore.PayloadState",
                name: "state",
                type: "uint8",
              },
              {
                internalType: "uint40",
                name: "createdAt",
                type: "uint40",
              },
              {
                internalType: "uint40",
                name: "queuedAt",
                type: "uint40",
              },
              {
                internalType: "uint40",
                name: "executedAt",
                type: "uint40",
              },
              {
                internalType: "uint40",
                name: "cancelledAt",
                type: "uint40",
              },
              {
                internalType: "uint40",
                name: "expirationTime",
                type: "uint40",
              },
              {
                internalType: "uint40",
                name: "delay",
                type: "uint40",
              },
              {
                internalType: "uint40",
                name: "gracePeriod",
                type: "uint40",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "target",
                    type: "address",
                  },
                  {
                    internalType: "bool",
                    name: "withDelegateCall",
                    type: "bool",
                  },
                  {
                    internalType: "enum PayloadsControllerUtils.AccessControl",
                    name: "accessLevel",
                    type: "uint8",
                  },
                  {
                    internalType: "uint256",
                    name: "value",
                    type: "uint256",
                  },
                  {
                    internalType: "string",
                    name: "signature",
                    type: "string",
                  },
                  {
                    internalType: "bytes",
                    name: "callData",
                    type: "bytes",
                  },
                ],
                internalType:
                  "struct IPayloadsControllerCore.ExecutionAction[]",
                name: "actions",
                type: "tuple[]",
              },
            ],
            internalType: "struct IPayloadsControllerCore.Payload",
            name: "data",
            type: "tuple",
          },
        ],
        internalType: "struct IPayloadsControllerDataHelper.Payload[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

export class IPayloadsControllerDataHelper__factory {
  static readonly abi = _abi;
  static createInterface(): IPayloadsControllerDataHelperInterface {
    return new utils.Interface(_abi) as IPayloadsControllerDataHelperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IPayloadsControllerDataHelper {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IPayloadsControllerDataHelper;
  }
}
